{
  "version": 3,
  "sources": ["../../d3-tile/src/tile.js", "../../d3-tile/src/wrap.js"],
  "sourcesContent": ["function defaultScale(t) {\n  return t.k;\n}\n\nfunction defaultTranslate(t) {\n  return [t.x, t.y];\n}\n\nfunction constant(x) {\n  return function() {\n    return x;\n  };\n}\n\nexport default function() {\n  let x0 = 0, y0 = 0, x1 = 960, y1 = 500;\n  let clampX = true, clampY = true;\n  let tileSize = 256;\n  let scale = defaultScale;\n  let translate = defaultTranslate;\n  let zoomDelta = 0;\n\n  function tile() {\n    const scale_ = +scale.apply(this, arguments);\n    const translate_ = translate.apply(this, arguments);\n    const z = Math.log2(scale_ / tileSize);\n    const z0 = Math.round(Math.max(z + zoomDelta, 0));\n    const k = Math.pow(2, z - z0) * tileSize;\n    const x = +translate_[0] - scale_ / 2;\n    const y = +translate_[1] - scale_ / 2;\n    const xmin = Math.max(clampX ? 0 : -Infinity, Math.floor((x0 - x) / k));\n    const xmax = Math.min(clampX ? 1 << z0 : Infinity, Math.ceil((x1 - x) / k));\n    const ymin = Math.max(clampY ? 0 : -Infinity, Math.floor((y0 - y) / k));\n    const ymax = Math.min(clampY ? 1 << z0 : Infinity, Math.ceil((y1 - y) / k));\n    const tiles = [];\n    for (let y = ymin; y < ymax; ++y) {\n      for (let x = xmin; x < xmax; ++x) {\n        tiles.push([x, y, z0]);\n      }\n    }\n    tiles.translate = [x / k, y / k];\n    tiles.scale = k;\n    return tiles;\n  }\n\n  tile.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], tile) : [x1 - x0, y1 - y0];\n  };\n\n  tile.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], tile) : [[x0, y0], [x1, y1]];\n  };\n\n  tile.scale = function(_) {\n    return arguments.length ? (scale = typeof _ === \"function\" ? _ : constant(+_), tile) : scale;\n  };\n\n  tile.translate = function(_) {\n    return arguments.length ? (translate = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), tile) : translate;\n  };\n\n  tile.zoomDelta = function(_) {\n    return arguments.length ? (zoomDelta = +_, tile) : zoomDelta;\n  };\n\n  tile.tileSize = function(_) {\n    return arguments.length ? (tileSize = +_, tile) : tileSize;\n  };\n\n  tile.clamp = function(_) {\n    return arguments.length ? (clampX = clampY = !!_, tile) : clampX && clampY;\n  };\n\n  tile.clampX = function(_) {\n    return arguments.length ? (clampX = !!_, tile) : clampX;\n  };\n\n  tile.clampY = function(_) {\n    return arguments.length ? (clampY = !!_, tile) : clampY;\n  };\n\n  return tile;\n}\n", "export default function tileWrap([x, y, z]) {\n  const j = 1 << z;\n  return [x - Math.floor(x / j) * j, y - Math.floor(y / j) * j, z];\n}\n"],
  "mappings": "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",
  "names": ["y", "x"]
}
